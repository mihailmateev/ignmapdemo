//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Mvc4EfSpatialDemo
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SpatialDemoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SpatialDemoEntities object using the connection string found in the 'SpatialDemoEntities' section of the application configuration file.
        /// </summary>
        public SpatialDemoEntities() : base("name=SpatialDemoEntities", "SpatialDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SpatialDemoEntities object.
        /// </summary>
        public SpatialDemoEntities(string connectionString) : base(connectionString, "SpatialDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SpatialDemoEntities object.
        /// </summary>
        public SpatialDemoEntities(EntityConnection connection) : base(connection, "SpatialDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<world> worlds
        {
            get
            {
                if ((_worlds == null))
                {
                    _worlds = base.CreateObjectSet<world>("worlds");
                }
                return _worlds;
            }
        }
        private ObjectSet<world> _worlds;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the worlds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToworlds(world world)
        {
            base.AddObject("worlds", world);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SpatialDemoModel", Name="world")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class world : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new world object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static world Createworld(global::System.Int32 id)
        {
            world world = new world();
            world.ID = id;
            return world;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, true, "CODE");
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CNTRY_NAME
        {
            get
            {
                return _CNTRY_NAME;
            }
            set
            {
                OnCNTRY_NAMEChanging(value);
                ReportPropertyChanging("CNTRY_NAME");
                _CNTRY_NAME = StructuralObject.SetValidValue(value, true, "CNTRY_NAME");
                ReportPropertyChanged("CNTRY_NAME");
                OnCNTRY_NAMEChanged();
            }
        }
        private global::System.String _CNTRY_NAME;
        partial void OnCNTRY_NAMEChanging(global::System.String value);
        partial void OnCNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> POP_CNTRY
        {
            get
            {
                return _POP_CNTRY;
            }
            set
            {
                OnPOP_CNTRYChanging(value);
                ReportPropertyChanging("POP_CNTRY");
                _POP_CNTRY = StructuralObject.SetValidValue(value, "POP_CNTRY");
                ReportPropertyChanged("POP_CNTRY");
                OnPOP_CNTRYChanged();
            }
        }
        private Nullable<global::System.Int64> _POP_CNTRY;
        partial void OnPOP_CNTRYChanging(Nullable<global::System.Int64> value);
        partial void OnPOP_CNTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURR_TYPE
        {
            get
            {
                return _CURR_TYPE;
            }
            set
            {
                OnCURR_TYPEChanging(value);
                ReportPropertyChanging("CURR_TYPE");
                _CURR_TYPE = StructuralObject.SetValidValue(value, true, "CURR_TYPE");
                ReportPropertyChanged("CURR_TYPE");
                OnCURR_TYPEChanged();
            }
        }
        private global::System.String _CURR_TYPE;
        partial void OnCURR_TYPEChanging(global::System.String value);
        partial void OnCURR_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURR_CODE
        {
            get
            {
                return _CURR_CODE;
            }
            set
            {
                OnCURR_CODEChanging(value);
                ReportPropertyChanging("CURR_CODE");
                _CURR_CODE = StructuralObject.SetValidValue(value, true, "CURR_CODE");
                ReportPropertyChanged("CURR_CODE");
                OnCURR_CODEChanged();
            }
        }
        private global::System.String _CURR_CODE;
        partial void OnCURR_CODEChanging(global::System.String value);
        partial void OnCURR_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIPS
        {
            get
            {
                return _FIPS;
            }
            set
            {
                OnFIPSChanging(value);
                ReportPropertyChanging("FIPS");
                _FIPS = StructuralObject.SetValidValue(value, true, "FIPS");
                ReportPropertyChanged("FIPS");
                OnFIPSChanged();
            }
        }
        private global::System.String _FIPS;
        partial void OnFIPSChanging(global::System.String value);
        partial void OnFIPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry geom
        {
            get
            {
                return _geom;
            }
            set
            {
                OngeomChanging(value);
                ReportPropertyChanging("geom");
                _geom = StructuralObject.SetValidValue(value, true, "geom");
                ReportPropertyChanged("geom");
                OngeomChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _geom;
        partial void OngeomChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OngeomChanged();

        #endregion

    }

    #endregion

}
